{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pinformatica\\\\Desktop\\\\Fruselva_web\\\\front\\\\src\\\\pages\\\\RegionesComunasForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SelectorRegiones = () => {\n  _s();\n  const [regiones, setRegiones] = useState([]);\n  const [regionSeleccionada, setRegionSeleccionada] = useState('');\n  const [error, setError] = useState(null);\n  const fetchRegiones = async () => {\n    console.log(\"üü° fetchRegiones llamado\");\n    try {\n      const res = await fetch('https://apis.digital.gob.cl/dpa/regiones');\n      if (!res.ok) {\n        console.error(\"Fetch regiones ERROR status:\", res.status);\n        setError(\"No se pudieron cargar las regiones\");\n        return;\n      }\n      const data = await res.json();\n      console.log(\"‚úÖ Regiones recibidas:\", data);\n      // Verifica que sea un array\n      if (!Array.isArray(data)) {\n        console.error(\"‚ö†Ô∏è Las regiones no vienen como array:\", data);\n        setError(\"Formato inesperado de las regiones\");\n        return;\n      }\n      setRegiones(data);\n    } catch (err) {\n      console.error(\"üî• Error en fetchRegiones catch:\", err);\n      setError(\"Error de conexi√≥n al traer regiones\");\n    }\n  };\n  useEffect(() => {\n    fetchRegiones();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Regi\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: regionSeleccionada,\n      onChange: e => setRegionSeleccionada(e.target.value),\n      className: \"border p-2 rounded\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Seleccione una regi\\xF3n --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), regiones.map(r => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: r.codigo,\n        children: r.nombre\n      }, r.codigo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Regi\\xF3n seleccionada: \", regionSeleccionada]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectorRegiones, \"i1qFzvsEvrbXfGqQIoWNi6+6+bM=\");\n_c = SelectorRegiones;\nexport default SelectorRegiones;\nvar _c;\n$RefreshReg$(_c, \"SelectorRegiones\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SelectorRegiones","_s","regiones","setRegiones","regionSeleccionada","setRegionSeleccionada","error","setError","fetchRegiones","console","log","res","fetch","ok","status","data","json","Array","isArray","err","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","className","map","r","codigo","nombre","_c","$RefreshReg$"],"sources":["C:/Users/pinformatica/Desktop/Fruselva_web/front/src/pages/RegionesComunasForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst SelectorRegiones = () => {\r\n  const [regiones, setRegiones] = useState([]);\r\n  const [regionSeleccionada, setRegionSeleccionada] = useState('');\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchRegiones = async () => {\r\n    console.log(\"üü° fetchRegiones llamado\");\r\n    try {\r\n      const res = await fetch('https://apis.digital.gob.cl/dpa/regiones');\r\n      if (!res.ok) {\r\n        console.error(\"Fetch regiones ERROR status:\", res.status);\r\n        setError(\"No se pudieron cargar las regiones\");\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      console.log(\"‚úÖ Regiones recibidas:\", data);\r\n      // Verifica que sea un array\r\n      if (!Array.isArray(data)) {\r\n        console.error(\"‚ö†Ô∏è Las regiones no vienen como array:\", data);\r\n        setError(\"Formato inesperado de las regiones\");\r\n        return;\r\n      }\r\n      setRegiones(data);\r\n    } catch (err) {\r\n      console.error(\"üî• Error en fetchRegiones catch:\", err);\r\n      setError(\"Error de conexi√≥n al traer regiones\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchRegiones();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n      <label>Regi√≥n:</label>\r\n      <select\r\n        value={regionSeleccionada}\r\n        onChange={(e) => setRegionSeleccionada(e.target.value)}\r\n        className=\"border p-2 rounded\"\r\n      >\r\n        <option value=\"\">-- Seleccione una regi√≥n --</option>\r\n        {regiones.map((r) => (\r\n          <option key={r.codigo} value={r.codigo}>\r\n            {r.nombre}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <p>Regi√≥n seleccionada: {regionSeleccionada}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorRegiones;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}