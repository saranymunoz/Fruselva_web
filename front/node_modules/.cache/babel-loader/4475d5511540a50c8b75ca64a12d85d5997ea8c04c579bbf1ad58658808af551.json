{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pinformatica\\\\Desktop\\\\Fruselva_web\\\\front\\\\src\\\\pages\\\\RegionesComunasForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SelectorRegionesComunas = () => {\n  _s();\n  var _regiones$find;\n  const [regiones, setRegiones] = useState([]);\n  const [comunas, setComunas] = useState([]);\n  const [regionSeleccionada, setRegionSeleccionada] = useState('');\n  const [comunaSeleccionada, setComunaSeleccionada] = useState('');\n  const [error, setError] = useState(null);\n\n  // Obtener regiones desde la API pública\n  const fetchRegiones = async () => {\n    try {\n      const res = await fetch('https://corsproxy.io/?https://apis.digital.gob.cl/dpa/regiones');\n      if (!res.ok) {\n        setError('Error al obtener regiones');\n        return;\n      }\n      const data = await res.json();\n      setRegiones(data);\n    } catch (err) {\n      console.error(err);\n      setError('Error de conexión al cargar regiones');\n    }\n  };\n\n  // Obtener comunas según la región seleccionada\n  const fetchComunas = async regionCodigo => {\n    try {\n      const res = await fetch(`https://corsproxy.io/?https://apis.digital.gob.cl/dpa/regiones/${regionCodigo}/comunas`);\n      if (!res.ok) {\n        setError('Error al obtener comunas');\n        return;\n      }\n      const data = await res.json();\n      setComunas(data);\n    } catch (err) {\n      console.error(err);\n      setError('Error de conexión al cargar comunas');\n    }\n  };\n\n  // Cargar regiones al montar\n  useEffect(() => {\n    fetchRegiones();\n  }, []);\n\n  // Cuando cambia la región, cargar comunas\n  useEffect(() => {\n    if (regionSeleccionada) {\n      fetchComunas(regionSeleccionada);\n      setComunaSeleccionada(''); // reset comuna al cambiar región\n    } else {\n      setComunas([]);\n    }\n  }, [regionSeleccionada]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-lg mx-auto bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"\\uD83C\\uDF0D Selecciona Regi\\xF3n y Comuna\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-600 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"block mb-2 font-medium\",\n      children: \"Regi\\xF3n:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: regionSeleccionada,\n      onChange: e => setRegionSeleccionada(e.target.value),\n      className: \"border p-2 rounded w-full mb-4\",\n      required: true,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"-- Selecciona una regi\\xF3n --\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), regiones.map(region => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: region.codigo,\n        children: region.nombre\n      }, region.codigo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), regionSeleccionada && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block mb-2 font-medium\",\n        children: \"Comuna:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: comunaSeleccionada,\n        onChange: e => setComunaSeleccionada(e.target.value),\n        className: \"border p-2 rounded w-full mb-4\",\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"-- Selecciona una comuna --\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), comunas.map(comuna => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: comuna.nombre,\n          children: comuna.nombre\n        }, comuna.codigo, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), regionSeleccionada && comunaSeleccionada && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 text-gray-700\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Regi\\xF3n seleccionada:\", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: (_regiones$find = regiones.find(r => r.codigo === regionSeleccionada)) === null || _regiones$find === void 0 ? void 0 : _regiones$find.nombre\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Comuna seleccionada: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: comunaSeleccionada\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(SelectorRegionesComunas, \"bp8KfGhpOhXVmuja/VDOKL9To58=\");\n_c = SelectorRegionesComunas;\nexport default SelectorRegionesComunas;\nvar _c;\n$RefreshReg$(_c, \"SelectorRegionesComunas\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SelectorRegionesComunas","_s","_regiones$find","regiones","setRegiones","comunas","setComunas","regionSeleccionada","setRegionSeleccionada","comunaSeleccionada","setComunaSeleccionada","error","setError","fetchRegiones","res","fetch","ok","data","json","err","console","fetchComunas","regionCodigo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","required","map","region","codigo","nombre","comuna","find","r","_c","$RefreshReg$"],"sources":["C:/Users/pinformatica/Desktop/Fruselva_web/front/src/pages/RegionesComunasForm.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst SelectorRegionesComunas = () => {\r\n  const [regiones, setRegiones] = useState([]);\r\n  const [comunas, setComunas] = useState([]);\r\n\r\n  const [regionSeleccionada, setRegionSeleccionada] = useState('');\r\n  const [comunaSeleccionada, setComunaSeleccionada] = useState('');\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  // Obtener regiones desde la API pública\r\n  const fetchRegiones = async () => {\r\n    try {\r\n      const res = await fetch('https://corsproxy.io/?https://apis.digital.gob.cl/dpa/regiones');\r\n      if (!res.ok) {\r\n        setError('Error al obtener regiones');\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      setRegiones(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Error de conexión al cargar regiones');\r\n    }\r\n  };\r\n\r\n  // Obtener comunas según la región seleccionada\r\n  const fetchComunas = async (regionCodigo) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://corsproxy.io/?https://apis.digital.gob.cl/dpa/regiones/${regionCodigo}/comunas`\r\n      );\r\n      if (!res.ok) {\r\n        setError('Error al obtener comunas');\r\n        return;\r\n      }\r\n      const data = await res.json();\r\n      setComunas(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('Error de conexión al cargar comunas');\r\n    }\r\n  };\r\n\r\n  // Cargar regiones al montar\r\n  useEffect(() => {\r\n    fetchRegiones();\r\n  }, []);\r\n\r\n  // Cuando cambia la región, cargar comunas\r\n  useEffect(() => {\r\n    if (regionSeleccionada) {\r\n      fetchComunas(regionSeleccionada);\r\n      setComunaSeleccionada(''); // reset comuna al cambiar región\r\n    } else {\r\n      setComunas([]);\r\n    }\r\n  }, [regionSeleccionada]);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-lg mx-auto bg-white rounded shadow\">\r\n      <h2 className=\"text-xl font-bold mb-4\">🌍 Selecciona Región y Comuna</h2>\r\n\r\n      {error && <p className=\"text-red-600 mb-4\">{error}</p>}\r\n\r\n      {/* Selector de Región */}\r\n      <label className=\"block mb-2 font-medium\">Región:</label>\r\n      <select\r\n        value={regionSeleccionada}\r\n        onChange={(e) => setRegionSeleccionada(e.target.value)}\r\n        className=\"border p-2 rounded w-full mb-4\"\r\n        required\r\n      >\r\n        <option value=\"\">-- Selecciona una región --</option>\r\n        {regiones.map((region) => (\r\n          <option key={region.codigo} value={region.codigo}>\r\n            {region.nombre}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      {/* Selector de Comuna */}\r\n      {regionSeleccionada && (\r\n        <>\r\n          <label className=\"block mb-2 font-medium\">Comuna:</label>\r\n          <select\r\n            value={comunaSeleccionada}\r\n            onChange={(e) => setComunaSeleccionada(e.target.value)}\r\n            className=\"border p-2 rounded w-full mb-4\"\r\n            required\r\n          >\r\n            <option value=\"\">-- Selecciona una comuna --</option>\r\n            {comunas.map((comuna) => (\r\n              <option key={comuna.codigo} value={comuna.nombre}>\r\n                {comuna.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </>\r\n      )}\r\n\r\n      {/* Mostrar selección actual */}\r\n      {regionSeleccionada && comunaSeleccionada && (\r\n        <div className=\"mt-4 text-gray-700\">\r\n          <p>\r\n            Región seleccionada:{' '}\r\n            <strong>\r\n              {regiones.find((r) => r.codigo === regionSeleccionada)?.nombre}\r\n            </strong>\r\n          </p>\r\n          <p>\r\n            Comuna seleccionada: <strong>{comunaSeleccionada}</strong>\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectorRegionesComunas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}